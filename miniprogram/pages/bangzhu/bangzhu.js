// pages/bangzhu/bangzhu.js
Page({

  /**
   * 页面的初始数据
   */
  data: {
    list:[ 
      "家族（亲戚圈）小程序,依托腾讯公司,在微信内运行, 目的:利于家族建立联系、缅怀先辈、寻根问祖。",
      "程序的收藏：以好友转发的形式扩散，并可在微信内收藏。 程序的受众：所有微信用户均可建立家族，或加入家族。",
      "家族建立：以村(也可以用其他名称）+姓氏为家族名称为宜，并在家族（圈）内封闭查询。家族的创建者，对该族的数据负责，可设立密码、设立白名单、关闭族（圈）。建立家族（圈）时，登记创建者和联系电话。",
      "谁录入的数据谁有权修改数据，但创建者可以删除、修改家族内的数据，非创建者可以申请其他人录入数据的修改权，对方（或家族创建者）同意后生效。",
      "程序的运行：点击微信登录，经授权后程序获取微信ID ，选择家族，如不精确（汉字一音多字等）可模糊查询，输入家族名称中的连续的词，即可供操作者选择自己操作的家族。",
      "主要功能：录入新增人员、修改原有数据（仅限自己录入的数据）、修改连接人员的系统编码（ID）、查询指定人员信息和关联人员（父亲、母亲、配偶、子女）、查询家族分析报告",
      "收集数据的项目：1、系统必备：系统编码 、操作者身份、家族名称、时间及昵称； 2、自身的信息：姓名、性别、出生日期、是否死亡、居住市县、死亡日期、联系电话。3、其他关联人员：父亲、母亲、配偶、子女的姓名和ID，其中配偶、子女（子女加注关系）可多项。4、备注一项（仅限50字）。",
       "家族权限设置：创建者有权设置操作者的权限，包括1、自主关闭家族系统，2、登录采用密码制和无密码制，全体密码都一样，3、启用白名单和不使用白名单制，启用白名单后操作员需申请，创建者同意即为白名单，未同意前为黑名单。创建者可以将白名单划转为黑名单。",
       "增加修改查询人员：首次进入默认调取20人数据，供操作者借鉴或待修改；点击查下一位后更换显示数据，这时点击修改可进入修改状态；只有先查询才能修改；在增加状态进入修改状态没有意义哟；在输入姓名更新框输入姓名的字段可查询最多20人的数据，如无重名只有一位人员数据。",
       "增加修改查询人员：在输入或修改时，输入了附属姓名后，在编码框长按可出现该人编码，修改时即使有编码长按后也可更新（若有变更），长按后没有编码出现，可能是姓名不一致，请核对长辈或幼辈的信息，只有姓名一致才能建立链接。",
       "增加修改查询人员：配偶最多5人，子女最多9人,如果增加配偶或子女请在屏幕下方点击配偶增或子女增，保存数据时自动清除无数据的项目。子女关系的约定：关系中包含‘子’字即为男性幼辈，关系中包含‘女’字的则为幼辈女性（女婿解读为女性）.只有长辈和幼辈都录入对，才能获得自己数据中的所有编码，因此需要反复修改。",
       "亲戚圈:内含多个家族，多个家族可以相互链接，可展示人员关系，生成的家族谱以直系血缘为主，如果在生成家谱时请去掉‘女儿不入谱’勾选项就能生成亲戚圈谱。但无法调取同辈长辈的异性人员（小辈的亲戚子女能调用）。",
      "作者负责编写、运营、管理程序，但不负责具体数据的维护，数据存放在微信服务器中。",
       "作者：刘晓云；籍贯：河北省秦皇岛市青龙县楼子石乡碱厂村；出生：1964年8月1日；现住址：河北省承德市鹰手营子矿区营子镇南街四十栋小区22号楼4单元3楼；身份证：130804196408010014；电话：13832429913；微信：LIUXIAOYUN1234567890",
      "后续：编程阶段，需要最多15名体验人员（期间可以更换）；体验认可该程序能达到目的，且操作简单、数据安全、数据管理可靠，即可发布正式版本。网站费用:发布成本：正式版本每申请一次费用300元/次。数据存储成本：最低30元/月，次低104元/月。初期成本将由编写者负责，正式版本发布后由受众人士募集。"
     
      

    ],
     step:0
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
   this.xianshi(0)
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
   

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  },
  xianshi:function(hang){
   var neirong=this.data.list[hang]
   const ctx=wx.createCanvasContext('mycanvas')
   const grd = ctx.createLinearGradient(0, 0, 320, 580)
grd.addColorStop(0, 'white')
grd.addColorStop(1, 'yellow')

// Fill with gradient
ctx.setFillStyle(grd)
ctx.fillRect(0, 0, 315, 600)
ctx.draw(true)

   var x=0
   var y=0
   ctx.draw(true)
   ctx.setFontSize(18)
   ctx.setFillStyle("blue")
   
   for (var i=0;i<neirong.length;i++){
     y=Math.floor((i / 15))
     x=(i % 15)
      ctx.fillText(neirong.slice(i,i+1), x*20+10, y*40+20)
      // console.log(i,x,y,neirong.slice(i,i+1))
      ctx.draw(true)

   }
   ctx.setFillStyle("green")
    ctx.fillText(hang+1,140, 450)
      // console.log(i,x,y,neirong.slice(i,i+1))
      ctx.draw(true) 

  
   
  
  },
  xuantiao:function(e){
    // console.log(e)
    var step=this.data.step
    var id=e.target.id
    // console.log(e,id)
    if (id=="+"){
       step++
       step=Math.min(step,this.data.list.length-1)
    }else{
      step=step-1
       step=Math.max(step,0)
    }
    this.setData({step:step})
    this.xianshi(step)
    // console.log(step)
  }
})